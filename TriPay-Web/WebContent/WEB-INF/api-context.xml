<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<bean id="wordgen"
		class="com.octo.captcha.component.word.wordgenerator.RandomWordGenerator">
		<constructor-arg>
			<value>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012345679!@#$%^*()?</value>
		</constructor-arg>
	</bean>

	<bean id="filedict" class="com.octo.captcha.component.word.FileDictionary">
		<constructor-arg index="0">
			<value>toddlist</value>
		</constructor-arg>
	</bean>

	<bean id="wordtoimage"
		class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage">
		<constructor-arg index="0">
			<ref bean="fontGenRandom" />
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="backGenUni" />
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="simpleWhitePaster" />
		</constructor-arg>
	</bean>

	<bean id="fontArial" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Arial</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>5</value>
		</constructor-arg>
	</bean>
	<bean id="fontGenRandom"
		class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
		<constructor-arg index="0">
			<value>40</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>50</value>
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<ref bean="fontArial" />
				<ref bean="fontTahoma" />
				<ref bean="fontVerdana" />
				<ref bean="fontComic" />
				<ref bean="fontLucida" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="fontTahoma" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Tahoma</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>5</value>
		</constructor-arg>
	</bean>

	<bean id="fontVerdana" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Verdana</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>5</value>
		</constructor-arg>
	</bean>

	<bean id="fontComic" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Comic sans MS</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>5</value>
		</constructor-arg>
	</bean>
	<bean id="backGenMultiShape"
		class="com.octo.captcha.component.image.backgroundgenerator.MultipleShapeBackgroundGenerator">
		<constructor-arg index="0">
			<value>300</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>100</value>
		</constructor-arg>
		<!--firstEllipseColorGenerator -->
		<constructor-arg index="2">
			<ref bean="lightBlue" />
		</constructor-arg>
		<!--secondEllipseColorGenerator -->
		<constructor-arg index="3">
			<ref bean="colorGreen" />
		</constructor-arg>
		<!--spaceBetweenLine -->
		<constructor-arg index="4">
			<value>10</value>
		</constructor-arg>
		<!--spaceBetweenCircle -->
		<constructor-arg index="5">
			<value>5</value>
		</constructor-arg>
		<!--ellipseHeight -->
		<constructor-arg index="6">
			<value>10</value>
		</constructor-arg>
		<!--ellipseWidth -->
		<constructor-arg index="7">
			<value>6</value>
		</constructor-arg>
		<!--firstRectangleColorGenerator -->
		<constructor-arg index="8">
			<ref bean="blue" />
		</constructor-arg>
		<!--secondRectangleColorGenerator -->
		<constructor-arg index="9">
			<ref bean="yellow" />
		</constructor-arg>
		<!--firstRectangleColorGenerator -->
		<constructor-arg index="10">
			<value>3</value>
		</constructor-arg>
	</bean>
	<bean id="fontLucida" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Lucida console</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>5</value>
		</constructor-arg>
	</bean>
	<bean id="blue" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>0</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>255</value>
		</constructor-arg>
	</bean>

	<bean id="lightBlue" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>200</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>200</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>255</value>
		</constructor-arg>
	</bean>

	<bean id="yellow" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>0</value>
		</constructor-arg>
	</bean>
	<bean id="colorGenRandomList"
		class="com.octo.captcha.component.image.color.RandomListColorGenerator">
		<constructor-arg index="0">
			<list>
				<ref bean="yellow" />
				<ref bean="blue" />
				<ref bean="lightBlue" />
			</list>
		</constructor-arg>
	</bean>



	<bean id="backGenFunky"
		class="com.octo.captcha.component.image.backgroundgenerator.FunkyBackgroundGenerator">
		<constructor-arg index="0">
			<value>300</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>100</value>
		</constructor-arg>
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="2">
			<ref bean="colorGenRandomList" />
		</constructor-arg>
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="3">
			<ref bean="colorGenRandomList" />
		</constructor-arg>
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="4">
			<ref bean="colorGenRandomList" />
		</constructor-arg>
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="5">
			<ref bean="colorGenRandomList" />
		</constructor-arg>
		<constructor-arg index="6">
			<value>0.2f</value>
		</constructor-arg>
	</bean>

	<bean id="backGenUni"
		class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator">
		<constructor-arg index="0">
			<value>300</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>100</value>
		</constructor-arg>
	</bean>

	<bean id="simpleWhitePaster"
		class="com.octo.captcha.component.image.textpaster.SimpleTextPaster">
		<constructor-arg type="java.lang.Integer" index="0">
			<value>5</value>
		</constructor-arg>
		<constructor-arg type="java.lang.Integer" index="1">
			<value>10</value>
		</constructor-arg>
		<constructor-arg type="java.awt.Color" index="2">
			<ref bean="colorBlack" />
		</constructor-arg>
	</bean>
	<bean id="sphere" class="com.jhlabs.image.SphereFilter">
		<property name="refractionIndex">
			<value>1</value>
		</property>
	</bean>
	<bean id="twirl" class="com.jhlabs.image.TwirlFilter">
		<property name="angle">
			<value>0.8</value>
		</property>
	</bean>
	<bean id="weaves" class="com.jhlabs.image.WeaveFilter">
		<property name="useImageColors">
			<value>true</value>
		</property>
		<property name="XGap">
			<value>2</value>
		</property>
		<property name="XWidth">
			<value>10</value>
		</property>
		<property name="YWidth">
			<value>16</value>
		</property>
		<property name="YGap">
			<value>6</value>
		</property>
	</bean>
	<bean id="waterFilter" class="com.jhlabs.image.WaterFilter">
		<property name="amplitude">
			<value>2</value>
		</property>
		<property name="wavelength">
			<value>20</value>
		</property>
	</bean>

	<bean id="colorGreen" class="java.awt.Color">
		<constructor-arg index="0" type="int">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="1" type="int">
			<value>100</value>
		</constructor-arg>
		<constructor-arg index="2" type="int">
			<value>0</value>
		</constructor-arg>
	</bean>

	<bean id="colorBlack" class="java.awt.Color">
		<constructor-arg index="0" type="int">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="1" type="int">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2" type="int">
			<value>0</value>
		</constructor-arg>
	</bean>
	<bean id="captchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory">
		<constructor-arg>
			<ref bean="wordgen" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="wordtoimage" />
		</constructor-arg>
	</bean>
	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
		<constructor-arg index="0">
			<list>
				<ref bean="captchaFactory" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="captchaService"
		class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0">
			<ref bean="imageEngine" />
		</constructor-arg>
		<constructor-arg index="1">
			<value>180</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>180000</value>
		</constructor-arg>
		<constructor-arg index="3">
			<value>75000</value>
		</constructor-arg>
	</bean>



	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- User -->
	<bean id="verificationApi" class="com.google.recaptcha.api.impl.VerificationApiImpl">
		<constructor-arg ref="captchaService" />
	</bean>


	<bean id="registerValidation" class="com.tripayweb.validation.RegisterValidation">
	</bean>


	<bean id="mobileOTPValidation" class="com.tripayweb.validation.MobileOTPValidation">
	</bean>

	<bean id="emailOTPValidation" class="com.tripayweb.validation.EmailOTPValidation">
	</bean>
	<bean id="loginValidation" class="com.tripayweb.validation.LoginValidation">
	</bean>
	<bean id="changePasswordValidation" class="com.tripayweb.validation.ChangePasswordValidation">
	</bean>

	<bean id="inviteFriendValidation" class="com.tripayweb.validation.InviteFriendValidation">
	</bean>
	<bean id="sendMoneyValidation" class="com.tripayweb.validation.SendMoneyValidation">
	</bean>
	<bean id="payAtStoreValidation" class="com.tripayweb.validation.PayAtStoreValidation">
	</bean>
	<bean id="topupValidation" class="com.tripayweb.validation.TopupValidation">
	</bean>
	<bean id="promoCodeValidation" class="com.tripayweb.validation.PromoCodeValidation">
	</bean>

	<bean id="gcmValidation" class="com.tripayweb.validation.GCMValidation">
	</bean>
	<bean id="gcmApi" class="com.gcm.api.impl.NotificationApi">
	</bean>


	<bean id="commonValidation" class="com.tripayweb.validation.CommonValidation">
	</bean>

	<bean id="dTHBillPaymentValidation" class="com.tripayweb.validation.DTHBillPaymentValidation">
	</bean>

	<bean id="landlineBillPaymentValidation" class="com.tripayweb.validation.LandlineBillPaymentValidation">
	</bean>

	<bean id="electricityBillPaymentValidation"
		class="com.tripayweb.validation.ElectricityBillPaymentValidation">
	</bean>

	<bean id="gasBillValidation" class="com.tripayweb.validation.GasBillPaymentValidation">
	</bean>

	<bean id="insuranceBillPaymentValidation"
		class="com.tripayweb.validation.InsuranceBillPaymentValidation">
	</bean>

	<bean id="editProfileValidation" class="com.tripayweb.validation.EditProfileValidation">
	</bean>

	<bean id="loadMoneyValidation" class="com.tripayweb.validation.LoadMoneyValidation">
	</bean>


	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<!-- FOR MOBILE BEANS -->

	<bean id="telco" class="com.tripayweb.api.impl.TelcoApi">
	</bean>

	<bean id="merchantApi" class="com.thirdparty.api.impl.MerchantApi">
	</bean>
	<bean id="iMerchantApi" class="com.tripayweb.app.api.impl.MerchantApi">
	</bean>
	<!-- APP API -->
	<bean id="appAdminApi" class="com.tripayweb.app.api.impl.AdminApi">
	</bean>

	<bean id="appBillPaymentApi" class="com.tripayweb.app.api.impl.BillPaymentApi">
	</bean>

	<bean id="appLoadMoneyApi" class="com.tripayweb.app.api.impl.LoadMoneyApi">
	</bean>

	<bean id="appLoginApi" class="com.tripayweb.app.api.impl.LoginApi">
	</bean>

	<bean id="appLogoutApi" class="com.tripayweb.app.api.impl.LogoutApi">
	</bean>

	<bean id="appRegistrationApi" class="com.tripayweb.app.api.impl.RegistrationApi">
	</bean>

	<bean id="appSendMoneyApi" class="com.tripayweb.app.api.impl.SendMoneyApi">
	</bean>

	<bean id="appTopupApi" class="com.tripayweb.app.api.impl.TopupApi">
	</bean>

	<bean id="appUserApi" class="com.tripayweb.app.api.impl.UserApi">
	</bean>
	

	

	<bean id="couponApi" class="com.coupon.api.impl.CouponApi"></bean>

	<bean id="callBackApi" class="com.tripayweb.app.api.impl.CallBackApi"></bean>
	<bean id="mpinValidation" class="com.tripayweb.validation.MpinValidation"></bean>

	<bean id="authenticationApi" class="com.tripayweb.api.impl.AuthenticationApi"></bean>
	<bean id="promoCodeApi" class="com.coupon.api.impl.PromoCodeApi"></bean>
	<bean id="ivalidationApi" class="com.instantpay.api.impl.ValidationApi"></bean>
	<bean id="iplansApi" class="com.instantpay.api.impl.PlansApi"></bean>
	<bean id="transactionApi" class="com.tripayweb.app.api.impl.TransactionApi"></bean>
	<bean id="versionApi" class="com.tripayweb.app.api.impl.VersionApi"></bean>
	<bean id="tpmApi" class="com.thirdparty.api.impl.MerchantApi"></bean>
	<bean id="merchantValidation" class="com.thirdparty.validation.MerchantValidation"></bean>
	<bean id="tpLoginValidation" class="com.thirdparty.validation.LoginValidation"></bean>
	<bean id="tpRegisterValidation" class="com.thirdparty.validation.RegisterValidation"></bean>
	<bean id="kycValidation" class="com.tripayweb.validation.KycValidation"></bean>
	<bean id="offlinePaymentValidation" class="com.tripayweb.validation.OfflinePaymentValidation"></bean>

	<bean id="busValidation" class="com.tripayweb.validation.BusValidation"></bean>
	
	<bean id="meraEventsApi" class="com.tripayweb.app.api.impl.MeraEventsApi"></bean>
	
	
	
	<tx:annotation-driven/>
</beans>